apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "kargo.names.name" . }}-update
  namespace: {{ .Release.Namespace }}
spec:
  schedule: {{ $.Values.master.cron }}
  concurrencyPolicy : Forbid
  failedJobsHistoryLimit: {{ $.Values.master.failedJobsHistoryLimit }}
  successfulJobsHistoryLimit: {{ $.Values.master.successfulJobsHistoryLimit }}
  jobTemplate:
    spec:
      backoffLimit: {{ $.Values.master.backoffLimit }}
      ttlSecondsAfterFinished: {{ .Values.master.autoRemoveJobAfter | default 172800 }} # 2 days
      template:
        spec:
          restartPolicy: Never
          {{- with .Values.podSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}         

          {{- with .Values.global.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          containers:
          - name: {{ include "kargo.names.name" . }}-update
            image: {{ $.Values.global.repository }}:{{ $.Values.global.tag | default "latest" }}
            imagePullPolicy: {{ $.Values.global.pullPolicy }}
            env:
            - name: ROLE
              value: "master"
            {{- include "kargo.environment.render" (dict "env" $.Values.global.env "context" $) | indent 12 }}
            volumeMounts:
            - name: bdortho-bucket
              mountPath: /bucket
{{- $nodeNames := .Values.nodeNames }}
{{- range $nodeName := $nodeNames }}
            - name: {{ $nodeName }}-bdortho-data
              mountPath: /mnt/{{ $nodeName }}
{{- end }}
          volumes:
{{- range $nodeName := $nodeNames }}
          - name: {{ $nodeName }}-bdortho-data
            persistentVolumeClaim:
              claimName: {{ $nodeName }}-bdortho-pvc
{{- end }}
          - name: bdortho-bucket
            persistentVolumeClaim:
              claimName: bdortho-bucket-pvc
          
          
