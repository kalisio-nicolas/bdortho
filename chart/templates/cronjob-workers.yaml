# On sauvegarde le contaxt actuelle dans une variable
{{- $currentContext := . -}}
{{- range $index := until ($.Values.worker.numberOfWorkers | int)}}
{{- $index = add $index 1 }} # We need to start at 1
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "kargo.names.name" $ }}-worker-{{ $index}}
spec:
  schedule: {{ $.Values.worker.cron }}
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: {{ $.Values.worker.failedJobsHistoryLimit | default 1 }}
  successfulJobsHistoryLimit: {{ $.Values.worker.successfulJobsHistoryLimit | default 1 }}
  jobTemplate:
    spec:
      
      backoffLimit: 0
      template:
        metadata:
          labels:
            app: {{ include "kargo.names.name" $ }}-pod
        spec:
          topologySpreadConstraints: 
          - maxSkew: 1
            topologyKey: "kubernetes.io/hostname"
            whenUnsatisfiable: ScheduleAnyway
            labelSelector:
              matchLabels:
                app: {{ include "kargo.names.name" $ }}-pod   
          restartPolicy: Never
          {{- with $.Values.podSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }} 


          containers:
          - name: {{ include "kargo.names.name" $ }}-container-{{ $index }}
            image: {{ $.Values.common.repository }}:{{ $.Values.common.tag | default $.Chart.AppVersion }}"
            imagePullPolicy: {{ $.Values.common.pullPolicy }}
            env:
            - name: HOSTNAME
              value: worker-{{ $index }}
            - name: ROLE
              value: "worker"              
            - name: VOLUMES
              value: "/data"
            {{- include "kargo.environment.render" (dict "env" $.Values.common.env "context" $) | indent 12 }}
            {{- include "kargo.environment.render" (dict "env" $.Values.worker.env "context" $) | indent 12 }}

            volumeMounts:
            - name: bdortho-volume-{{ $index }}
              mountPath: /data
            {{- if $.Values.common.rcloneSecret }}
            - name: rclone-config
              mountPath: /.rclone.conf
              subPath: rclone.conf
              readOnly: true
            {{- end }}
              

          volumes:
          - name: bdortho-volume-{{ $index }}
            persistentVolumeClaim:
              claimName: bdortho-pvc-{{ $index }}


          {{- if $.Values.common.rcloneSecret }}
          {{- include "kargo.rcloneConfig.renderVolume" ( dict "args" $.Values.common "context" $ ) | nindent 10 }}
          {{- end }}

              
--- # Necessary to create multiple cronjobs
{{- end }}

