{{- $nodeNames := .Values.nodeNames }}
{{- range $nodeName := $nodeNames }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "kargo.names.name" $ }}-{{ $nodeName }}-worker
spec:
  schedule: {{ $.Values.worker.cron }}
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: {{ $.Values.worker.failedJobsHistoryLimit | default 1 }}
  successfulJobsHistoryLimit: {{ $.Values.worker.successfulJobsHistoryLimit | default 1 }}
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        metadata:
          labels:
            app: {{ include "kargo.names.name" $ }}-{{ $nodeName }}-pod
        spec:   
          restartPolicy: Never
          {{- with $.Values.podSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}     
          nodeSelector:
            kubernetes.io/hostname: {{ $nodeName }}
          containers:
          - name: {{ include "kargo.names.name" $ }}-{{ $nodeName }}-container
            image: {{ $.Values.global.repository }}:{{ $.Values.global.tag }}
            imagePullPolicy: {{ $.Values.global.pullPolicy }}
            env:
            - name: HOSTNAME
              value: {{ $nodeName }}
            - name: ROLE
              value: "worker"              
            - name: VOLUMES
              value: "/data"
            {{- include "kargo.environment.render" (dict "env" $.Values.global.env "context" $) | indent 12 }}
            {{- include "kargo.environment.render" (dict "env" $.Values.worker.env "context" $) | indent 12 }}

            volumeMounts:
            - name: {{ $nodeName }}-bdortho-data
              mountPath: /data
            - name: bdortho-bucket
              mountPath: /bucket

          volumes:
          - name: {{ $nodeName }}-bdortho-data
            persistentVolumeClaim:
              claimName: {{ $nodeName }}-bdortho-pvc
          - name: bdortho-bucket
            persistentVolumeClaim:
              claimName: bdortho-bucket-pvc
--- # Necessary to create multiple cronjobs
{{- end }}
